// Загрузка категорий при открытие страницы
loadCategory();
function loadCategory() {
    $('div#download_img').css('display', 'block'); //Показываем картинку загрузки

    //Формируем массив из изначений value чекбоксов
    var tagsArray = $('input[name="news_cat"]').map(function () {
        return this.value;
    }).get().join(',');

    $(document).ready(function () {
        $.ajax({
            type: "POST",
            url: "../php/catsfilter.php",
            data: { "menu[]": tagsArray }, //Создаем массив категорий
            cache: false,
            success: function (response) {
                $('div#download_img').css('display', 'none'); //Закрываем логотип загрузки
                renderCategories(response);
                //renderCategories(DOMPurify.sanitize(response)); //не работает
            }
        }).done(function(){//закрыть иконку загрузки пагинации
            $("span#loader-icon").hide();
        });
    });
}

function renderCategories(response) {
    if (!response.startsWith('{"')) //с сервера получена обычная строка, не json-объект
    {
        $(".category, .sumbit").html(`<h2 style="color:#fa5b5a;">${response}</h2>`);
        return;
    }
    const { categories, rules, output } = JSON.parse(response); //забираем ключи из json-объекта
    
    $('.hs-categ').each(function (i) {    //вывод из бд категорий для index.php
        var cat = $(this).find('.category'); //this ссылается на текущий .hs_wrapper элемент
        categories[i].forEach(function (item) //перебор и вывод списка категории
        {
            const card = getItemHTML(item, rules);
            cat.trigger('add.owl.carousel', card);
        });
        cat.trigger('refresh.owl.carousel');

        //вывод из бд категорий для submenu.php
        var sumbit = $(this).find('.sumbit'); //this ссылается на текущий .hs_wrapper элемент
        categories[i].forEach(function (item) //перебор и вывод списка категории
        {
            const card = getItemHTML(item, rules);
            sumbit.empty().append(card); //очищаем старую и добавляем новую выборку статей и пагинаций
        });

        //вывод из бд номеров пагинаций
        var pagcat = $(this).find('.pagcat');
        output[i].forEach(function (page) //перебор и вывод списка категории
        {
            const pag = getItemPAG(page);
            pagcat.empty().append(pag); //очищаем старую и добавляем новую выборку статей и пагинаций
        });
    });
}

// Загрузка категорий по клику на пагинации
$(document).on('click', 'a.link', function(e){
    e.preventDefault();
    $('div#download_img').css('display', 'block'); //Показываем картинку загрузки
    var url = $(this).data('pag');
    var tagsArray = $(this).closest('.hs-categ').find('input[name="news_cat"]').val(); //Выборочная загрузка категорий
    $.ajax({
        type: "POST",
        url: url,
        data: { "menu[]": 2 }, //Создаем массив категорий
        cache: false,
        success: function (response) {
            $('div#download_img').css('display', 'none'); //Закрываем логотип загрузки
            renderOneCategory(response);
            //renderCategories(DOMPurify.sanitize(response)); //не работает
        }
    }).done(function(){//закрыть иконку загрузки пагинации
        $("span#loader-icon").hide();
    });
});

function renderOneCategory(response) {
    if (!response.startsWith('{"')) //с сервера получена обычная строка, не json-объект
    {
        $(".category, .sumbit").html(`<h2 style="color:#fa5b5a;">${response}</h2>`);
        return;
    }
    const { categories, rules, output } = JSON.parse(response); //забираем ключи из json-объекта

    var arr = [1]; // здесь недоработка. Я сюда хочу пробросить переменную tagsArray из "Загрузка категорий по клику на пагинации" и добавить смещение чисел на -1, т.е tagsArray = 1 или 2 или 3, а var arr = 0 или 1 или 2
    $.each(arr, function(a,e){
        $('.hs-categ').eq(e).each(function (i) {    //вывод из бд категорий для index.php
            var cat = $(this).find('.category'); //this ссылается на текущий .hs_wrapper элемент
            categories[i].forEach(function (item) //перебор и вывод списка категории
            {
                const card = getItemHTML(item, rules);
                cat.trigger('add.owl.carousel', card);
            });
            cat.trigger('refresh.owl.carousel');

            //вывод из бд категорий для submenu.php
            var sumbit = $(this).find('.sumbit'); //this ссылается на текущий .hs_wrapper элемент
            categories[i].forEach(function (item) //перебор и вывод списка категории
            {
                const card = getItemHTML(item, rules);
                sumbit.empty().append(card); //очищаем старую и добавляем новую выборку статей и пагинаций
            });

            //вывод из бд номеров пагинаций
            var pagcat = $(this).find('.pagcat');
            output[i].forEach(function (page) //перебор и вывод списка категории
            {
                const pag = getItemPAG(page);
                pagcat.empty().append(pag); //очищаем старую и добавляем новую выборку статей и пагинаций
            });
        });
    });
}

function getItemHTML(item, state) //item - это тот же бывший rowfilter в catsfilter.php
{
    /* собираем вёрстку в соответствии с правилами */
    const startHTML = `
        <li class='hs__item item'>
            <a class='hs__item__wrapper' href='main.php?page=${item.id}'>
                <div class='hs__item__imagebox'>
                    <img class='hs__item__image' src='img/uploads/image${item.image}' alt='Логотип статьи'/>
                </div>
                <div class='hs__item__shadows'>
                    <span class='hs__item__title'>${item.title}</span>
                    <span class='hs__item__description'>${item.text}</span>
                </div>
            </a>
            <div class='hs__item__subtitle'>
                <a href='profile.php?user=${item.author}' class='item-author' title='Профиль автора'><span>автор:</span> ${item.author}</a>
                <a href='main.php?page=${item.id}' class='item-main'>читать..</a>`;

    //если пользователь модератор или авторизован и статья за его авторством
    const authHTML = state.isModerator || (state.login === item.author) ? `
                <a id='eddContent' href='profile.php?user=${item.author}' data-id='${item.id}'>
                    <svg class='up1' xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                        <path d="M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160V416c0 53 43 96 96 96H352c53 0 96-43 96-96V320c0-17.7-14.3-32-32-32s-32 14.3-32 32v96c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H96z"/>
                    </svg>
                </a>
                <a id='deleteContent' class='delete' data-message='Вы хотите удалить статью?' data-size='small' data-theme='red' data-placement='left' data-id='${item.id}'>
                    <svg class='up2' xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
                        <path d="M135.2 17.7C140.6 6.8 151.7 0 163.8 0H284.2c12.1 0 23.2 6.8 28.6 17.7L320 32h96c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 96 0 81.7 0 64S14.3 32 32 32h96l7.2-14.3zM32 128H416V448c0 35.3-28.7 64-64 64H96c-35.3 0-64-28.7-64-64V128zm96 64c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm96 0c-8.8 0-16 7.2-16 16V432c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16z"/>
                    </svg>
                </a>
            </div>` : "";

    const endHTML = `
        </li>`;

    return startHTML + authHTML + endHTML;
}

function getItemPAG(page)
{
    const pagHTML = `
        <div id="pagelink">${page}</div>`;

    return pagHTML;
}

// Отправка id статьи на страницу профиля
$(document).on('click', '#eddContent', function(e){
    e.preventDefault();
    localStorage.setItem('eddContent', $(this).attr('data-id'));

    var url = $(this).attr('href');
    location.replace(url);
    
    return false;
});
